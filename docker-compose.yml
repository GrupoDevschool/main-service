version: '3'
services:
  redisdoc:
    container_name: redisdoc
    image: redis
    ports:
    - "6379:6379"
    networks:
    - production
    volumes:
    - /data/redis:/data
  mysqldoc:
    container_name: mysqldoc
    build:
      context: .
      dockerfile: ./mysql.dockerfile
    image: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: springuser
      MYSQL_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: document
    networks:
    - production
    volumes:
      - /data/database:/var/lib/mysql
  springboot:
    container_name: springboot
    build:
      context: ./main
      dockerfile: ./springboot.dockerfile
    image: springboot
    ports:
      - "8080:8080"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldoc:3306/document
      - spring.redis.host=redisdoc
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
    networks:
      - production
    depends_on:
      - mysqldoc
      - redisdoc
      - eureka
  eureka:
    container_name: eureka
    build:
      context: ./service-discovery
      dockerfile: ./Dockerfile
    image: eureka
    ports:
      - "8761:8761"
    networks:
      - production
  jwt:
    container_name: jwt
    build:
      context: ./service-auth
      dockerfile: ./Dockerfile
    image: jwt
    ports:
      - "8082:8082"
    networks:
      - production
    depends_on:
      - mysqldoc
      - redisdoc
      - eureka
      - springboot
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldoc:3306/document
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
networks:
  production:
    driver: bridge
